/*
 * OpenLigaDB-API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Goal
    /// </summary>
    [DataContract(Name = "Goal")]
    public partial class Goal : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Goal" /> class.
        /// </summary>
        /// <param name="goalID">goalID.</param>
        /// <param name="scoreTeam1">scoreTeam1.</param>
        /// <param name="scoreTeam2">scoreTeam2.</param>
        /// <param name="matchMinute">matchMinute.</param>
        /// <param name="goalGetterID">goalGetterID.</param>
        /// <param name="goalGetterName">goalGetterName.</param>
        /// <param name="isPenalty">isPenalty.</param>
        /// <param name="isOwnGoal">isOwnGoal.</param>
        /// <param name="isOvertime">isOvertime.</param>
        /// <param name="comment">comment.</param>
        public Goal(int goalID = default(int), int? scoreTeam1 = default(int?), int? scoreTeam2 = default(int?), int? matchMinute = default(int?), int goalGetterID = default(int), string goalGetterName = default(string), bool? isPenalty = default(bool?), bool? isOwnGoal = default(bool?), bool? isOvertime = default(bool?), string comment = default(string))
        {
            this.GoalID = goalID;
            this.ScoreTeam1 = scoreTeam1;
            this.ScoreTeam2 = scoreTeam2;
            this.MatchMinute = matchMinute;
            this.GoalGetterID = goalGetterID;
            this.GoalGetterName = goalGetterName;
            this.IsPenalty = isPenalty;
            this.IsOwnGoal = isOwnGoal;
            this.IsOvertime = isOvertime;
            this.Comment = comment;
        }

        /// <summary>
        /// Gets or Sets GoalID
        /// </summary>
        [DataMember(Name = "goalID", EmitDefaultValue = false)]
        public int GoalID { get; set; }

        /// <summary>
        /// Gets or Sets ScoreTeam1
        /// </summary>
        [DataMember(Name = "scoreTeam1", EmitDefaultValue = true)]
        public int? ScoreTeam1 { get; set; }

        /// <summary>
        /// Gets or Sets ScoreTeam2
        /// </summary>
        [DataMember(Name = "scoreTeam2", EmitDefaultValue = true)]
        public int? ScoreTeam2 { get; set; }

        /// <summary>
        /// Gets or Sets MatchMinute
        /// </summary>
        [DataMember(Name = "matchMinute", EmitDefaultValue = true)]
        public int? MatchMinute { get; set; }

        /// <summary>
        /// Gets or Sets GoalGetterID
        /// </summary>
        [DataMember(Name = "goalGetterID", EmitDefaultValue = false)]
        public int GoalGetterID { get; set; }

        /// <summary>
        /// Gets or Sets GoalGetterName
        /// </summary>
        [DataMember(Name = "goalGetterName", EmitDefaultValue = true)]
        public string GoalGetterName { get; set; }

        /// <summary>
        /// Gets or Sets IsPenalty
        /// </summary>
        [DataMember(Name = "isPenalty", EmitDefaultValue = true)]
        public bool? IsPenalty { get; set; }

        /// <summary>
        /// Gets or Sets IsOwnGoal
        /// </summary>
        [DataMember(Name = "isOwnGoal", EmitDefaultValue = true)]
        public bool? IsOwnGoal { get; set; }

        /// <summary>
        /// Gets or Sets IsOvertime
        /// </summary>
        [DataMember(Name = "isOvertime", EmitDefaultValue = true)]
        public bool? IsOvertime { get; set; }

        /// <summary>
        /// Gets or Sets Comment
        /// </summary>
        [DataMember(Name = "comment", EmitDefaultValue = true)]
        public string Comment { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Goal {\n");
            sb.Append("  GoalID: ").Append(GoalID).Append("\n");
            sb.Append("  ScoreTeam1: ").Append(ScoreTeam1).Append("\n");
            sb.Append("  ScoreTeam2: ").Append(ScoreTeam2).Append("\n");
            sb.Append("  MatchMinute: ").Append(MatchMinute).Append("\n");
            sb.Append("  GoalGetterID: ").Append(GoalGetterID).Append("\n");
            sb.Append("  GoalGetterName: ").Append(GoalGetterName).Append("\n");
            sb.Append("  IsPenalty: ").Append(IsPenalty).Append("\n");
            sb.Append("  IsOwnGoal: ").Append(IsOwnGoal).Append("\n");
            sb.Append("  IsOvertime: ").Append(IsOvertime).Append("\n");
            sb.Append("  Comment: ").Append(Comment).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
