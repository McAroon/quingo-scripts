/*
 * OpenLigaDB-API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// League
    /// </summary>
    [DataContract(Name = "League")]
    public partial class League : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="League" /> class.
        /// </summary>
        /// <param name="leagueId">leagueId.</param>
        /// <param name="leagueName">leagueName.</param>
        /// <param name="leagueShortcut">leagueShortcut.</param>
        /// <param name="leagueSeason">leagueSeason.</param>
        /// <param name="sport">sport.</param>
        public League(int leagueId = default(int), string leagueName = default(string), string leagueShortcut = default(string), string leagueSeason = default(string), Sport sport = default(Sport))
        {
            this.LeagueId = leagueId;
            this.LeagueName = leagueName;
            this.LeagueShortcut = leagueShortcut;
            this.LeagueSeason = leagueSeason;
            this.Sport = sport;
        }

        /// <summary>
        /// Gets or Sets LeagueId
        /// </summary>
        [DataMember(Name = "leagueId", EmitDefaultValue = false)]
        public int LeagueId { get; set; }

        /// <summary>
        /// Gets or Sets LeagueName
        /// </summary>
        [DataMember(Name = "leagueName", EmitDefaultValue = true)]
        public string LeagueName { get; set; }

        /// <summary>
        /// Gets or Sets LeagueShortcut
        /// </summary>
        [DataMember(Name = "leagueShortcut", EmitDefaultValue = true)]
        public string LeagueShortcut { get; set; }

        /// <summary>
        /// Gets or Sets LeagueSeason
        /// </summary>
        [DataMember(Name = "leagueSeason", EmitDefaultValue = true)]
        public string LeagueSeason { get; set; }

        /// <summary>
        /// Gets or Sets Sport
        /// </summary>
        [DataMember(Name = "sport", EmitDefaultValue = false)]
        public Sport Sport { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class League {\n");
            sb.Append("  LeagueId: ").Append(LeagueId).Append("\n");
            sb.Append("  LeagueName: ").Append(LeagueName).Append("\n");
            sb.Append("  LeagueShortcut: ").Append(LeagueShortcut).Append("\n");
            sb.Append("  LeagueSeason: ").Append(LeagueSeason).Append("\n");
            sb.Append("  Sport: ").Append(Sport).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
