/*
 * OpenLigaDB-API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// MatchResult
    /// </summary>
    [DataContract(Name = "MatchResult")]
    public partial class MatchResult : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MatchResult" /> class.
        /// </summary>
        /// <param name="resultID">resultID.</param>
        /// <param name="resultName">resultName.</param>
        /// <param name="pointsTeam1">pointsTeam1.</param>
        /// <param name="pointsTeam2">pointsTeam2.</param>
        /// <param name="resultOrderID">resultOrderID.</param>
        /// <param name="resultTypeID">resultTypeID.</param>
        /// <param name="resultDescription">resultDescription.</param>
        public MatchResult(int resultID = default(int), string resultName = default(string), int? pointsTeam1 = default(int?), int? pointsTeam2 = default(int?), int resultOrderID = default(int), int resultTypeID = default(int), string resultDescription = default(string))
        {
            this.ResultID = resultID;
            this.ResultName = resultName;
            this.PointsTeam1 = pointsTeam1;
            this.PointsTeam2 = pointsTeam2;
            this.ResultOrderID = resultOrderID;
            this.ResultTypeID = resultTypeID;
            this.ResultDescription = resultDescription;
        }

        /// <summary>
        /// Gets or Sets ResultID
        /// </summary>
        [DataMember(Name = "resultID", EmitDefaultValue = false)]
        public int ResultID { get; set; }

        /// <summary>
        /// Gets or Sets ResultName
        /// </summary>
        [DataMember(Name = "resultName", EmitDefaultValue = true)]
        public string ResultName { get; set; }

        /// <summary>
        /// Gets or Sets PointsTeam1
        /// </summary>
        [DataMember(Name = "pointsTeam1", EmitDefaultValue = true)]
        public int? PointsTeam1 { get; set; }

        /// <summary>
        /// Gets or Sets PointsTeam2
        /// </summary>
        [DataMember(Name = "pointsTeam2", EmitDefaultValue = true)]
        public int? PointsTeam2 { get; set; }

        /// <summary>
        /// Gets or Sets ResultOrderID
        /// </summary>
        [DataMember(Name = "resultOrderID", EmitDefaultValue = false)]
        public int ResultOrderID { get; set; }

        /// <summary>
        /// Gets or Sets ResultTypeID
        /// </summary>
        [DataMember(Name = "resultTypeID", EmitDefaultValue = false)]
        public int ResultTypeID { get; set; }

        /// <summary>
        /// Gets or Sets ResultDescription
        /// </summary>
        [DataMember(Name = "resultDescription", EmitDefaultValue = true)]
        public string ResultDescription { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class MatchResult {\n");
            sb.Append("  ResultID: ").Append(ResultID).Append("\n");
            sb.Append("  ResultName: ").Append(ResultName).Append("\n");
            sb.Append("  PointsTeam1: ").Append(PointsTeam1).Append("\n");
            sb.Append("  PointsTeam2: ").Append(PointsTeam2).Append("\n");
            sb.Append("  ResultOrderID: ").Append(ResultOrderID).Append("\n");
            sb.Append("  ResultTypeID: ").Append(ResultTypeID).Append("\n");
            sb.Append("  ResultDescription: ").Append(ResultDescription).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
