/*
 * OpenLigaDB-API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Sport
    /// </summary>
    [DataContract(Name = "Sport")]
    public partial class Sport : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Sport" /> class.
        /// </summary>
        /// <param name="sportId">sportId.</param>
        /// <param name="sportName">sportName.</param>
        public Sport(int sportId = default(int), string sportName = default(string))
        {
            this.SportId = sportId;
            this.SportName = sportName;
        }

        /// <summary>
        /// Gets or Sets SportId
        /// </summary>
        [DataMember(Name = "sportId", EmitDefaultValue = false)]
        public int SportId { get; set; }

        /// <summary>
        /// Gets or Sets SportName
        /// </summary>
        [DataMember(Name = "sportName", EmitDefaultValue = true)]
        public string SportName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Sport {\n");
            sb.Append("  SportId: ").Append(SportId).Append("\n");
            sb.Append("  SportName: ").Append(SportName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
