/*
 * OpenLigaDB-API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Team
    /// </summary>
    [DataContract(Name = "Team")]
    public partial class Team : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Team" /> class.
        /// </summary>
        /// <param name="teamId">teamId.</param>
        /// <param name="teamName">teamName.</param>
        /// <param name="shortName">shortName.</param>
        /// <param name="teamIconUrl">teamIconUrl.</param>
        /// <param name="teamGroupName">teamGroupName.</param>
        public Team(int teamId = default(int), string teamName = default(string), string shortName = default(string), string teamIconUrl = default(string), string teamGroupName = default(string))
        {
            this.TeamId = teamId;
            this.TeamName = teamName;
            this.ShortName = shortName;
            this.TeamIconUrl = teamIconUrl;
            this.TeamGroupName = teamGroupName;
        }

        /// <summary>
        /// Gets or Sets TeamId
        /// </summary>
        [DataMember(Name = "teamId", EmitDefaultValue = false)]
        public int TeamId { get; set; }

        /// <summary>
        /// Gets or Sets TeamName
        /// </summary>
        [DataMember(Name = "teamName", EmitDefaultValue = true)]
        public string TeamName { get; set; }

        /// <summary>
        /// Gets or Sets ShortName
        /// </summary>
        [DataMember(Name = "shortName", EmitDefaultValue = true)]
        public string ShortName { get; set; }

        /// <summary>
        /// Gets or Sets TeamIconUrl
        /// </summary>
        [DataMember(Name = "teamIconUrl", EmitDefaultValue = true)]
        public string TeamIconUrl { get; set; }

        /// <summary>
        /// Gets or Sets TeamGroupName
        /// </summary>
        [DataMember(Name = "teamGroupName", EmitDefaultValue = true)]
        public string TeamGroupName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Team {\n");
            sb.Append("  TeamId: ").Append(TeamId).Append("\n");
            sb.Append("  TeamName: ").Append(TeamName).Append("\n");
            sb.Append("  ShortName: ").Append(ShortName).Append("\n");
            sb.Append("  TeamIconUrl: ").Append(TeamIconUrl).Append("\n");
            sb.Append("  TeamGroupName: ").Append(TeamGroupName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
