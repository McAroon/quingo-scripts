/*
 * OpenLigaDB-API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing MatchdataApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class MatchdataApiTests : IDisposable
    {
        private MatchdataApi instance;

        public MatchdataApiTests()
        {
            instance = new MatchdataApi("https://api.openligadb.de");
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MatchdataApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' MatchdataApi
            //Assert.IsType<MatchdataApi>(instance);
        }

        /// <summary>
        /// Test GetavailablegroupsLeagueShortcutLeagueSeasonGet
        /// </summary>
        [Fact]
        public void GetavailablegroupsLeagueShortcutLeagueSeasonGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string leagueShortcut = null;
            //int leagueSeason = null;
            //var response = instance.GetavailablegroupsLeagueShortcutLeagueSeasonGet(leagueShortcut, leagueSeason);
            //Assert.IsType<List<Group>>(response);
        }

        /// <summary>
        /// Test GetavailableleaguesGet
        /// </summary>
        [Fact]
        public void GetavailableleaguesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            var response = instance.GetavailableleaguesGet();
            Assert.IsType<List<League>>(response);
        }

        /// <summary>
        /// Test GetavailablesportsGet
        /// </summary>
        [Fact]
        public void GetavailablesportsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetavailablesportsGet();
            //Assert.IsType<List<Sport>>(response);
        }

        /// <summary>
        /// Test GetavailableteamsLeagueShortcutLeagueSeasonGet
        /// </summary>
        [Fact]
        public void GetavailableteamsLeagueShortcutLeagueSeasonGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            string leagueShortcut = null;
            int leagueSeason = 0;
            var response = instance.GetavailableteamsLeagueShortcutLeagueSeasonGet(leagueShortcut, leagueSeason);
            Assert.IsType<List<Team>>(response);
        }

        /// <summary>
        /// Test GetbltableLeagueShortcutLeagueSeasonGet
        /// </summary>
        [Fact]
        public void GetbltableLeagueShortcutLeagueSeasonGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string leagueShortcut = null;
            //int leagueSeason = null;
            //var response = instance.GetbltableLeagueShortcutLeagueSeasonGet(leagueShortcut, leagueSeason);
            //Assert.IsType<List<BlTableTeam>>(response);
        }

        /// <summary>
        /// Test GetcurrentgroupLeagueShortcutGet
        /// </summary>
        [Fact]
        public void GetcurrentgroupLeagueShortcutGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string leagueShortcut = null;
            //var response = instance.GetcurrentgroupLeagueShortcutGet(leagueShortcut);
            //Assert.IsType<Group>(response);
        }

        /// <summary>
        /// Test GetgoalgettersLeagueShortcutLeagueSeasonGet
        /// </summary>
        [Fact]
        public void GetgoalgettersLeagueShortcutLeagueSeasonGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string leagueShortcut = null;
            //int leagueSeason = null;
            //var response = instance.GetgoalgettersLeagueShortcutLeagueSeasonGet(leagueShortcut, leagueSeason);
            //Assert.IsType<List<GoalGetter>>(response);
        }

        /// <summary>
        /// Test GetgrouptableLeagueShortcutLeagueSeasonGet
        /// </summary>
        [Fact]
        public void GetgrouptableLeagueShortcutLeagueSeasonGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string leagueShortcut = null;
            //int leagueSeason = null;
            //var response = instance.GetgrouptableLeagueShortcutLeagueSeasonGet(leagueShortcut, leagueSeason);
            //Assert.IsType<List<BlTableTeam>>(response);
        }

        /// <summary>
        /// Test GetlastchangedateLeagueShortcutLeagueSeasonGroupOrderIdGet
        /// </summary>
        [Fact]
        public void GetlastchangedateLeagueShortcutLeagueSeasonGroupOrderIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string leagueShortcut = null;
            //int leagueSeason = null;
            //int groupOrderId = null;
            //var response = instance.GetlastchangedateLeagueShortcutLeagueSeasonGroupOrderIdGet(leagueShortcut, leagueSeason, groupOrderId);
            //Assert.IsType<DateTime>(response);
        }

        /// <summary>
        /// Test GetlastmatchbyleagueshortcutLeagueShortcutGet
        /// </summary>
        [Fact]
        public void GetlastmatchbyleagueshortcutLeagueShortcutGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string leagueShortcut = null;
            //var response = instance.GetlastmatchbyleagueshortcutLeagueShortcutGet(leagueShortcut);
            //Assert.IsType<Match>(response);
        }

        /// <summary>
        /// Test GetlastmatchbyleagueteamLeagueIdTeamIdGet
        /// </summary>
        [Fact]
        public void GetlastmatchbyleagueteamLeagueIdTeamIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int leagueId = null;
            //int teamId = null;
            //var response = instance.GetlastmatchbyleagueteamLeagueIdTeamIdGet(leagueId, teamId);
            //Assert.IsType<Match>(response);
        }

        /// <summary>
        /// Test GetmatchdataLeagueShortcutLeagueSeasonGet
        /// </summary>
        [Fact]
        public void GetmatchdataLeagueShortcutLeagueSeasonGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string leagueShortcut = null;
            //int leagueSeason = null;
            //var response = instance.GetmatchdataLeagueShortcutLeagueSeasonGet(leagueShortcut, leagueSeason);
            //Assert.IsType<List<Match>>(response);
        }

        /// <summary>
        /// Test GetmatchdataLeagueShortcutLeagueSeasonGroupOrderIdGet
        /// </summary>
        [Fact]
        public void GetmatchdataLeagueShortcutLeagueSeasonGroupOrderIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string leagueShortcut = null;
            //int leagueSeason = null;
            //int groupOrderId = null;
            //var response = instance.GetmatchdataLeagueShortcutLeagueSeasonGroupOrderIdGet(leagueShortcut, leagueSeason, groupOrderId);
            //Assert.IsType<List<Match>>(response);
        }

        /// <summary>
        /// Test GetmatchdataLeagueShortcutLeagueSeasonTeamFilterstringGet
        /// </summary>
        [Fact]
        public void GetmatchdataLeagueShortcutLeagueSeasonTeamFilterstringGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string leagueShortcut = null;
            //int leagueSeason = null;
            //string teamFilterstring = null;
            //var response = instance.GetmatchdataLeagueShortcutLeagueSeasonTeamFilterstringGet(leagueShortcut, leagueSeason, teamFilterstring);
            //Assert.IsType<List<Match>>(response);
        }

        /// <summary>
        /// Test GetmatchdataMatchIdGet
        /// </summary>
        [Fact]
        public void GetmatchdataMatchIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int matchId = null;
            //var response = instance.GetmatchdataMatchIdGet(matchId);
            //Assert.IsType<Match>(response);
        }

        /// <summary>
        /// Test GetmatchdataTeamId1TeamId2Get
        /// </summary>
        [Fact]
        public void GetmatchdataTeamId1TeamId2GetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int teamId1 = null;
            //int teamId2 = null;
            //var response = instance.GetmatchdataTeamId1TeamId2Get(teamId1, teamId2);
            //Assert.IsType<List<Match>>(response);
        }

        /// <summary>
        /// Test GetmatchesbyteamTeamFilterstringWeekCountPastWeekCountFutureGet
        /// </summary>
        [Fact]
        public void GetmatchesbyteamTeamFilterstringWeekCountPastWeekCountFutureGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamFilterstring = null;
            //int weekCountPast = null;
            //int weekCountFuture = null;
            //var response = instance.GetmatchesbyteamTeamFilterstringWeekCountPastWeekCountFutureGet(teamFilterstring, weekCountPast, weekCountFuture);
            //Assert.IsType<List<Match>>(response);
        }

        /// <summary>
        /// Test GetmatchesbyteamidTeamIdWeekCountPastWeekCountFutureGet
        /// </summary>
        [Fact]
        public void GetmatchesbyteamidTeamIdWeekCountPastWeekCountFutureGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int teamId = null;
            //int weekCountPast = null;
            //int weekCountFuture = null;
            //var response = instance.GetmatchesbyteamidTeamIdWeekCountPastWeekCountFutureGet(teamId, weekCountPast, weekCountFuture);
            //Assert.IsType<List<Match>>(response);
        }

        /// <summary>
        /// Test GetnextmatchbyleagueshortcutLeagueShortcutGet
        /// </summary>
        [Fact]
        public void GetnextmatchbyleagueshortcutLeagueShortcutGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string leagueShortcut = null;
            //var response = instance.GetnextmatchbyleagueshortcutLeagueShortcutGet(leagueShortcut);
            //Assert.IsType<Match>(response);
        }

        /// <summary>
        /// Test GetnextmatchbyleagueteamLeagueIdTeamIdGet
        /// </summary>
        [Fact]
        public void GetnextmatchbyleagueteamLeagueIdTeamIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int leagueId = null;
            //int teamId = null;
            //var response = instance.GetnextmatchbyleagueteamLeagueIdTeamIdGet(leagueId, teamId);
            //Assert.IsType<Match>(response);
        }

        /// <summary>
        /// Test GetresultinfosLeagueIdGet
        /// </summary>
        [Fact]
        public void GetresultinfosLeagueIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int leagueId = null;
            //var response = instance.GetresultinfosLeagueIdGet(leagueId);
            //Assert.IsType<ResultInfo>(response);
        }
    }
}
